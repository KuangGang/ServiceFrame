spring:
  profiles.active: dev

---
#debug: true
#logging.level.root: TRACE
spring.output.ansi.enabled: DETECT
server:
  port: 8080
spring:
  profiles: dev
  #数据库设置
  application:
    name: scm
  datasource:
    driverClassName: com.mysql.jdbc.Driver
    #--------------------------
    # 下面为连接池的补充设置，应用到上面所有数据源中
    # 初始化大小，最小，最大
    initialSize: '50'
    minIdle: '5'
    maxActive: '2000'
    # 配置获取连接等待超时的时间
    maxWait: '6000'
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    timeBetweenEvictionRunsMillis: '60000'
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    minEvictableIdleTimeMillis: '300000'
    validationQuery: select version()
    testWhileIdle: 'true'
    testOnBorrow: 'false'
    testOnReturn: 'false'
    # 打开PSCache，并且指定每个连接上PSCache的大小
    poolPreparedStatements: 'true'
    maxPoolPreparedStatementPerConnectionSize: '20'
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: 'stat,wall,log4j'
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: 'druid.stat.mergeSql: true, druid.stat.slowSqlMillis: 5000'
    # 合并多个DruidDataSource的监控数据
    useGlobalDataSourceStat: 'true'
  dataSourceScmWrite:
    url: jdbc:mysql://123.56.25.206:3306/reportdb?useSSL=false
    username: dev_test
    password: 2018_dev_test
  dataSourceScmRead:
    url: jdbc:mysql://123.56.25.206:3306/reportdb?useSSL=false
    username: dev_test
    password: 2018_dev_test
  mybatis:
    configuration:
      cacheEnabled: true
      lazyLoadingEnabled: true
      aggressiveLazyLoading: true
      multipleResultSetsEnabled: true
      useColumnLabel: true
      useGeneratedKeys: false
      autoMappingBehavior: PARTIAL
      defaultExecutorType: SIMPLE
      mapUnderscoreToCamelCase: true
      localCacheScope: SESSION
      jdbcTypeForNull: NULL
  pagehelper:
    helperDialect: mysql
    reasonable: true
    supportMethodsArguments: true
    params: count=countSql
---
